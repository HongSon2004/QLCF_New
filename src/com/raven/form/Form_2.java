/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import dao.LoaiSPDAO;
import dao.NhanVienDAO;
import dao.SanPhamDAO;
import entity.HoaDon;
import entity.LoaiSP;
import entity.NhanVien;
import entity.SanPham;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.lang.System.Logger;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.Auth;
import utils.MsgBox;

/**
 *
 * @author RAVEN
 */
public class Form_2 extends javax.swing.JPanel {

  

    /**
     * Creates new form Form_1
     */
    public Form_2() {
        super();
        initComponents();
//        init();
//        btnTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
//            @Override
//            public void keyPressed(java.awt.event.KeyEvent evt) {
//                txtTimKiemKeyPressed(evt);
//            }
//        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel12.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 567, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(948, 948, 948)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
//NhanVienDAO dao = new NhanVienDAO();
//    int row = -1;
//
//    void init() {
//         // đưa cửa sổ ra giữa màn hình
//        this.fillTable(); // đổ dữ liệu nhân viên vào bảng
//        this.updateStatus(); // cập nhật trạng thái form
//        rdoNhanVien.setSelected(true);
//        rdoNu.setSelected(true);
//    }
//    private void clearForm() {
//        NhanVien nv = new NhanVien();
//        this.setForm(nv);
//        this.row = -1;
//        this.updateStatus();
//    }
//    
//
//    private void timKiem() {
//        this.fillTable();
//        this.clearForm();
//        this.row = -1;
//        this.updateStatus();
//    }
//
//    private void edit() {
//          String manv = (String) tblNhanVien.getValueAt(this.row, 0);
//        NhanVien nv = dao.selectById(manv);
//        this.setForm(nv);
//        this.updateStatus();
//        rdoNhanVien.setSelected(true);
//        rdoNu.setSelected(true);
//    }
//
//    private void delete() {
//        if (!Auth.isManager()) {
//            MsgBox.alert(this, "Bạn không có quyền xóa nhân viên!");
//        } else {
//            String manv = txtMaNV.getText();
//            if (manv.equals(Auth.user.getMaNV())) {
//                MsgBox.alert(this, "Bạn không được xóa chính bạn!");
//            } else if (MsgBox.confirm(this, "Bạn thực sự muốn xóa nhân viên này?")) {
//                try {
//                    dao.delete(manv);
//                    this.fillTable();
//                    this.clearForm();
//                    MsgBox.alert(this, "Xóa thành công!");
//                } catch (Exception e) {
//                    MsgBox.alert(this, "Xóa thất bại!");
//                }
//            }
//        }
//    }
//
//    private void insert() {
//        NhanVien nv = this.getForm();
//        try {
//            isValidated();
//            dao.insert(nv); // thêm mới
//            this.fillTable(); // đỗ lại bảng
//            this.clearForm(); // xóa trắng form
//            MsgBox.alert(this, "Thêm mới thành công!");
//        } catch (Exception e) {
//            MsgBox.alert(this, "Thêm mới thất bại!");
//        }
//    }
//
//    private void update() {
//        NhanVien nv = this.getForm();
//        try {
//            dao.update(nv); // cập nhật
//            this.fillTable(); // đổ lại bảng
//            MsgBox.alert(this, "Cập nhật thành công!");
//        } catch (Exception e) {
//            MsgBox.alert(this, "Cập nhật thất bại!");
//        }
//    }
//
//    private void fillTable() {
//        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
//        model.setRowCount(0);
//        try {
//            String keyword = txtTimKiem.getText();
//            List<NhanVien> list = dao.selectByKeyword(keyword);
//            for (NhanVien nv : list) {
//                Object[] row = {
//                    nv.getMaNV(),
//                    nv.getTenNV(),
//                    nv.getSdt(),
//                    nv.isGioitinh() ? "Nữ" : "Nam",
//                    nv.isPhanquyen() ? "Trưởng phòng" : "Nhân viên",
//                    nv.getGmail()
//                    
//                };
//                model.addRow(row);
//            }
//        } catch (Exception e) {
//            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
//        }
//    }
//
//    private void updateStatus() {
//         boolean edit = (this.row >= 0);
//        // Trạng thái form
//        txtMaNV.setEditable(!edit);
//        btnThem.setEnabled(!edit);
//        btnSua.setEnabled(edit);
//        btnXoa.setEnabled(edit);
//    }
//
//    private NhanVien getForm() {
//        NhanVien nv = new NhanVien();
//        nv.setMaNV(txtMaNV.getText());
//        nv.setTenNV(txtTenNV.getText());
//        nv.setSdt(txtSDT.getText());
//        nv.setPhanquyen(rdoTruongPhong.isSelected());
//        nv.setGioitinh(rdoNam.isSelected());
//        nv.setGmail(txtgmail.getText());
//        return nv;
//    }
//
//    private boolean isValidated() {
//        NhanVien nv = this.getForm();
//        if (nv.getMaNV().length() == 0) {
//            MsgBox.alert(this, "Không để trống mã nhân viên!");
//        } else if (nv.getTenNV().length() == 0) {
//            MsgBox.alert(this, "Không để trống họ và tên nhân viên!");
//        } else if (nv.getSdt().length() == 0) {
//            MsgBox.alert(this, "Không để trống số điện thoại!");
//        } else {
//            return true;
//        }
//        return false;
//    }
//    
//
//    void setForm(NhanVien nv) {
//        txtMaNV.setText(nv.getMaNV());
//        txtTenNV.setText(nv.getTenNV());
//        txtSDT.setText(nv.getSdt());
//        rdoNhanVien.setSelected(nv.isPhanquyen());
//        rdoTruongPhong.setSelected(nv.isPhanquyen());
//        rdoNam.setSelected(!nv.isGioitinh());
//        rdoNu.setSelected(!nv.isGioitinh());
//    }
//    
  
}